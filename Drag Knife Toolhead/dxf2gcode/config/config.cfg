
#  Section and variable names must be valid Python identifiers
#      do not use whitespace in names

# do not edit the following section name:
[Version]
    # do not edit the following value:
    config_version = 9.11

[Paths]
    # By default look for DXF files in this directory.
    import_dir = F:/3d Drucker/Voron
    
    # Export generated gcode by default to this directory.
    output_dir = F:/3d Drucker/Voron/Data
    
    # Save project files by default to this directory.
    project_dir = F:/3d Drucker/Voron/Data
    
    # Automatic save last path to config file. Therefore open with last path
    autosave_path = True

[Filters]
    # pstoedit is an external tool to convert PDF files to PS (postscript) files, which can be further processed by pstoedit tool.
    pdftops_cmd = C:/xpdf-tools-win-4.00/bin64/pdftops.exe
    pdftops_opt = "",
    
    # pstoedit is an external tool to import *.ps (postscript) files and convert them to DXF, in order to import them in dxf2gcode.
    pstoedit_cmd = C:/Program Files/pstoedit/pstoedit.exe
    pstoedit_opt = -dt, -f, dxf:-mm

[Axis_letters]
    ax1_letter = X
    ax2_letter = Y
    ax3_letter = Z

[Plane_Coordinates]
    axis1_start_end = 0.0
    axis2_start_end = 0.0

[Depth_Coordinates]
    # Third axis' coordinate at which it can do rapid move.
    axis3_retract = 3.0
    # Third axis' margin for which it needs to do a slow move.
    axis3_safe_margin = 3.0
    # The top third axis' coordinate of the workpiece.
    axis3_start_mill_depth = 0.0
    # Relative depth for each cut (third axis' coordinate will be decreased by this value at each step).
    axis3_slice_depth = -0.1
    # Relative final third axis' depth.
    axis3_mill_depth = -1.0

[Feed_Rates]
    f_g1_plane = 1000.0
    f_g1_depth = 600.0

[General]
    # Enable 3D representation of the piece (requires PyQt5 and OpenGL)
    mode3d = True
    # Write output to stdout (console), instead of a file. May be used to interface directly with Linux CNC, for example.
    write_to_stdout = False
    # When enabled, the shapes that are disabled are still shown on the graphic view.
    show_disabled_paths = True
    # When enabled, export path is live updated on the graphic view.
    live_update_export_route = False
    # Divide the lines in 2 parts, in order to start the cutting in the middle of a line (usefull for cutter compensation)
    split_line_segments = False
    # Automatically enable cutter compensation for all the shapes (G41 & G42)
    automatic_cutter_compensation = False
    # Machine types supported: milling; lathe; drag_knife
    machine_type = drag_knife
    # The unit used for all values in this file
    tool_units = mm

[Cutter_Compensation]
    # If not checked, DXF2GCODE will create a virtual path for G41 and G42 command. And output will be set to G40; i.e. it will create the path that normally your machine would create with it's cutter compensation.
    done_by_machine = False


[Drag_Knife_Options]
    # drag_angle: if angle of movement exceeds this angle (in degrees), the tool retracts to dragDepth (The dragDepth is given by axis3_slice_depth parameter).
    # This parameter depends on the knife that you are using. A bigger knife cannot make small corners like a smaller knife. You will simply break your knife or destroy your working piece. Now, if the angle your knife has to make is bigger than this angle it will move to a different depth (a less deep position) such that the knife will experience less resistance but still has some (otherwise it will not change its angle at all, whence DRAG knife).
    drag_angle = 20.0

[Route_Optimisation]
    # If enabled, it will by default check the TSP for all the shapes in the treeview.
    # If disabled and no shape is checked for TSP optimisation in the listbox, the export order will be as defined in the listbox.
    default_TSP = False
    
    # Path optimizer behaviour:
    # - CONSTRAIN_ORDER_ONLY: fixed Shapes and optimized Shapes can be mixed. Only order of fixed shapes is kept
    # - CONSTRAIN_PLACE_AFTER: optimized Shapes are always placed after any fixed Shape
    TSP_shape_order = CONSTRAIN_ORDER_ONLY
    # This is a value of how much it should deviate the order with each iteration. The higher the value the more you allow alterations.
    mutation_rate = 0.95
    # Number of people the population has for path optimization (values higher than 200 can make everything slow).
    max_population = 20
    # Maximum number of iterations that will be done. This is internally also calculated, based on the number of shapes to optimize.
    # Values higher than 10000 can take really long to solve the TSP and are not recommended.
    max_iterations = 300
    # Different methods to initialize the population for the TSP optimizer.
    # - Ordered will start with the defined one in the listbox
    # - Random just random
    # - Heuristic will search the nearest neighbors and starts with the resulting order.
    begin_art = heuristic

[Import_Parameters]
    # Tolerance at which similar points will be interpreted as similar
    point_tolerance = 0.001
    # Types of check performed during spline conversion:
    # 1: Checking for Nurbs degree (polygon degree) and similar knots consistence
    # 2: Checking for Nurbs degree (polygon degree) and similar control points
    # 3: Performes check 1 and check 2
    spline_check = 3
    # This is the tolerance which is used to fit the converted lines and arc segments to the converted NURBS.
    fitting_tolerance = 0.001
    # If checked, the elements (shape, ...) which are part of a block will be inserted on the layer that belongs to the block (even though the elements might be defined on a different layers)
    insert_at_block_layer = False

# These settings are intented to be used in the DXF file:
# - By using MILL: as a prefix to your layer name, you can define milling parameters by using one of the following identifiers.
# - Example of a layer name: MILL: 1 Md: 2 Sd: 2 FeedXY: 400 FeedZ: 200
#   (This will cut shapes on the layer 2 mm deep (in one pass, since Sd == Md) using 400 mm / minute speed for X/Y movement and 200 mm / minute for Z movement)
[Layer_Options]
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    id_float_separator = :
    
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    mill_depth_identifiers = MillDepth, Md, TiefeGesamt, Tg
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    slice_depth_identifiers = SliceDepth, Sd, TiefeZustellung, Tz
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    start_mill_depth_identifiers = StartMillDepth, SMd, StartTiefe, St
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    retract_identifiers = RetractHeight, Rh, Freifahrthoehe, FFh
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    safe_margin_identifiers = SafeMargin, Sm, Sicherheitshoehe, Sh
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    f_g1_plane_identifiers = FeedXY, Fxy, VorschubXY, Vxy, F
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    f_g1_depth_identifiers = FeedZ, Fz, VorschubZ, Vz
    
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    tool_nr_identifiers = ToolNr, Tn, T, WerkzeugNummer, Wn
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    tool_diameter_identifiers = ToolDiameter, Td, WerkzeugDurchmesser, Wd
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    spindle_speed_identifiers = SpindleSpeed, Drehzahl, RPM, UPM, S
    # To be used in the DXF layer name. See DXF2GCODE' wiki for more information.
    start_radius_identifiers = StartRadius, Sr

# Tools table: define here the tools used for milling:
# - name: this is the number of the tool, it will be used directly in the GCODE (eg 20 for tool T20)
# - diameter: diameter of the tool
# - speed: spindle speed in rpm
# - start_radius: start radius for tool compensation when using G41 / G42 moves
[Tool_Parameters]
    [[1]]
        diameter = 0.85
        speed = 1000.0
        start_radius = 1.0

# Define here custom GCODE actions:
# - name: this is the unique name of the action
# - gcode: the text that will be inserted in the final program (each new line is also translated as a new line in the output file)
# Custom actions can be inserted in the program by using right-click contextual menu on the treeview.
[Custom_Actions]

[Logging]
    # Logging to textfile is disabled by default
    logfile = ""
    
    # This really goes to stderr
    console_loglevel = CRITICAL
    
    # Log levels are, in increasing importance: DEBUG; INFO; WARNING; ERROR; CRITICAL
    # Log events with importance >= loglevel are logged to the corresponding output
    file_loglevel = DEBUG
    
    # Logging level for the message window
    window_loglevel = INFO
